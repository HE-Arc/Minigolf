{
    "openapi": "3.0.0",
    "info": {
        "title": "IGolf Api",
        "version": "1.0"
    },
    "servers": [
        {
            "url": "/api"
        }
    ],
    "paths": {
        "/courses": {
            "get": {
                "tags": [
                    "Courses"
                ],
                "summary": "List courses",
                "operationId": "App\\Http\\Controllers\\Api\\CourseController::index",
                "responses": {
                    "200": {
                        "description": "List of courses",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Course"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Courses"
                ],
                "summary": "Create new course",
                "operationId": "App\\Http\\Controllers\\Api\\CourseController::store",
                "requestBody": {
                    "request": "Course",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Course"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "A newly-created course",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Course"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "error"
                    }
                }
            }
        },
        "/courses/{id}": {
            "get": {
                "tags": [
                    "Courses"
                ],
                "summary": "Show a course",
                "operationId": "App\\Http\\Controllers\\Api\\CourseController::show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id course",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A course",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Course"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Courses"
                ],
                "summary": "Delete course",
                "operationId": "App\\Http\\Controllers\\Api\\CourseController::destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id course",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "delete a course"
                    },
                    "default": {
                        "description": "error"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Courses"
                ],
                "summary": "Update course",
                "operationId": "App\\Http\\Controllers\\Api\\CourseController::update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id course",
                        "required": true
                    }
                ],
                "requestBody": {
                    "request": "Course",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Course"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "List of courses",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Course"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "error"
                    }
                }
            }
        },
        "/games": {
            "get": {
                "tags": [
                    "Games"
                ],
                "summary": "List games",
                "operationId": "App\\Http\\Controllers\\Api\\GameController::index",
                "responses": {
                    "200": {
                        "description": "List of games",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Game"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Games"
                ],
                "summary": "Create new game",
                "operationId": "App\\Http\\Controllers\\Api\\GameController::store",
                "requestBody": {
                    "request": "Game",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Game"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "A newly-created game",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Game"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "error"
                    }
                }
            }
        },
        "/games/{id}": {
            "get": {
                "tags": [
                    "Games"
                ],
                "summary": "Show a game",
                "operationId": "App\\Http\\Controllers\\Api\\GameController::show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id game",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A game",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Game"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Games"
                ],
                "summary": "Delete game",
                "operationId": "App\\Http\\Controllers\\Api\\GameController::destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id game",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "delete a game"
                    },
                    "default": {
                        "description": "error"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Games"
                ],
                "summary": "Update game",
                "operationId": "App\\Http\\Controllers\\Api\\GameController::update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id game",
                        "required": true
                    }
                ],
                "requestBody": {
                    "request": "Game",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Game"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "List of games",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Game"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "error"
                    }
                }
            }
        },
        "/holes": {
            "get": {
                "tags": [
                    "Holes"
                ],
                "summary": "List holes",
                "operationId": "App\\Http\\Controllers\\Api\\HoleController::index",
                "responses": {
                    "200": {
                        "description": "List of holes",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Hole"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Holes"
                ],
                "summary": "Create new hole",
                "operationId": "App\\Http\\Controllers\\Api\\HoleController::store",
                "requestBody": {
                    "request": "Hole",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Hole"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "A newly-created hole",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Hole"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "error"
                    }
                }
            }
        },
        "/holes/{id}": {
            "get": {
                "tags": [
                    "Holes"
                ],
                "summary": "Show a hole",
                "operationId": "App\\Http\\Controllers\\Api\\HoleController::show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id hole",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A hole",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Hole"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Holes"
                ],
                "summary": "Delete hole",
                "operationId": "App\\Http\\Controllers\\Api\\HoleController::destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id hole",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "delete a hole"
                    },
                    "default": {
                        "description": "error"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Holes"
                ],
                "summary": "Update hole",
                "operationId": "App\\Http\\Controllers\\Api\\HoleController::update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id hole",
                        "required": true
                    }
                ],
                "requestBody": {
                    "request": "Hole",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Hole"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "List of holes",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Hole"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "error"
                    }
                }
            }
        },
        "/minigolfs": {
            "get": {
                "tags": [
                    "Minigolfs"
                ],
                "summary": "List minigolfs",
                "operationId": "App\\Http\\Controllers\\Api\\MinigolfController::index",
                "responses": {
                    "200": {
                        "description": "List of minigolfs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Minigolf"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Minigolfs"
                ],
                "summary": "Create new minigolf",
                "operationId": "App\\Http\\Controllers\\Api\\MinigolfController::store",
                "requestBody": {
                    "request": "Minigolf",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Minigolf"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "A newly-created minigolf",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Minigolf"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "error"
                    }
                }
            }
        },
        "/minigolfs/{id}": {
            "get": {
                "tags": [
                    "Minigolfs"
                ],
                "summary": "Show a minigolf",
                "operationId": "App\\Http\\Controllers\\Api\\MinigolfController::show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id minigolf",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A minigolf",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Minigolf"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Minigolfs"
                ],
                "summary": "Delete minigolf",
                "operationId": "App\\Http\\Controllers\\Api\\MinigolfController::destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id minigolf",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "delete a minigolf"
                    },
                    "default": {
                        "description": "error"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Minigolfs"
                ],
                "summary": "Update minigolf",
                "operationId": "App\\Http\\Controllers\\Api\\MinigolfController::update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id minigolf",
                        "required": true
                    }
                ],
                "requestBody": {
                    "request": "Minigolf",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Minigolf"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "List of minigolfs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Minigolf"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "error"
                    }
                }
            }
        },
        "/scores": {
            "get": {
                "tags": [
                    "Scores"
                ],
                "summary": "List scores",
                "operationId": "App\\Http\\Controllers\\Api\\ScoreController::index",
                "responses": {
                    "200": {
                        "description": "List of scores",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Score"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Scores"
                ],
                "summary": "Create new score",
                "operationId": "App\\Http\\Controllers\\Api\\ScoreController::store",
                "requestBody": {
                    "request": "Score",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Score"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "A newly-created score",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Score"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "error"
                    }
                }
            }
        },
        "/scores/{id}": {
            "get": {
                "tags": [
                    "Scores"
                ],
                "summary": "Show a score",
                "operationId": "App\\Http\\Controllers\\Api\\ScoreController::show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id score",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A score",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Score"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Scores"
                ],
                "summary": "Delete score",
                "operationId": "App\\Http\\Controllers\\Api\\ScoreController::destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id score",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "delete a score"
                    },
                    "default": {
                        "description": "error"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Scores"
                ],
                "summary": "Update score",
                "operationId": "App\\Http\\Controllers\\Api\\ScoreController::update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id score",
                        "required": true
                    }
                ],
                "requestBody": {
                    "request": "Score",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Score"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "List of scores",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Score"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "error"
                    }
                }
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "List users",
                "operationId": "App\\Http\\Controllers\\Api\\UserController::index",
                "responses": {
                    "200": {
                        "description": "List of users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create new user",
                "operationId": "App\\Http\\Controllers\\Api\\UserController::store",
                "requestBody": {
                    "request": "User",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "A newly-created user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "error"
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Show a user",
                "operationId": "App\\Http\\Controllers\\Api\\UserController::show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id user",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete user",
                "operationId": "App\\Http\\Controllers\\Api\\UserController::destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id user",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "delete a user"
                    },
                    "default": {
                        "description": "error"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Users"
                ],
                "summary": "Update user",
                "operationId": "App\\Http\\Controllers\\Api\\UserController::update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id user",
                        "required": true
                    }
                ],
                "requestBody": {
                    "request": "User",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "List of users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "error"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Course": {
                "properties": {
                    "minigolf_id": {
                        "description": "id minigolf",
                        "type": "integer",
                        "format": "associated minigolf",
                        "example": "1"
                    },
                    "name": {
                        "description": "Course name",
                        "type": "string",
                        "example": "Lava course"
                    },
                    "description": {
                        "description": "Course description",
                        "type": "string",
                        "example": "This course is great"
                    },
                    "image": {
                        "description": "Url image",
                        "type": "string",
                        "example": "https://valley.jpg"
                    }
                },
                "type": "object"
            },
            "Game": {
                "properties": {
                    "user_id": {
                        "description": "owner",
                        "type": "integer",
                        "example": "2"
                    },
                    "course_id": {
                        "description": "associated minigolf",
                        "type": "integer",
                        "example": "1"
                    },
                    "token": {
                        "description": "game token",
                        "type": "string",
                        "example": "LJS5D1"
                    },
                    "date": {
                        "description": "date of game creation",
                        "type": "string",
                        "example": "2019-11-12T10:10:49"
                    },
                    "isStarted": {
                        "description": "game started",
                        "type": "boolean",
                        "example": "0"
                    }
                },
                "type": "object"
            },
            "Hole": {
                "properties": {
                    "course_id": {
                        "description": "associated minigolf",
                        "type": "integer",
                        "example": "2"
                    },
                    "number": {
                        "description": "associated minigolf",
                        "type": "string",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "Minigolf": {
                "properties": {
                    "name": {
                        "description": "minigolf name",
                        "type": "string",
                        "example": "Minigolf World"
                    },
                    "description": {
                        "description": "minigolf description",
                        "type": "string",
                        "example": "This minigolf is awesome!"
                    },
                    "address": {
                        "description": "minigolf address",
                        "type": "string",
                        "example": "Rue du Tertre 10"
                    },
                    "city": {
                        "description": "minigolf city",
                        "type": "string",
                        "example": "Neuchâtel"
                    },
                    "zipcode": {
                        "description": "minigolf zipcode",
                        "type": "string",
                        "example": "2000"
                    },
                    "phone": {
                        "description": "minigolf phone",
                        "type": "string",
                        "example": "0793214392"
                    },
                    "email": {
                        "description": "minigolf email",
                        "type": "string",
                        "example": "minigolf.world@gmail.com"
                    },
                    "long": {
                        "description": "minigolf longitude",
                        "type": "number",
                        "example": "6.930877"
                    },
                    "lat": {
                        "description": "minigolf latitude",
                        "type": "number",
                        "example": "46.994679"
                    },
                    "image": {
                        "description": "Url image",
                        "type": "string",
                        "example": "https://valley.jpg"
                    }
                },
                "type": "object"
            },
            "Player": {
                "properties": {
                    "user_id": {
                        "description": "associed user",
                        "type": "integer",
                        "example": "3"
                    },
                    "game_id": {
                        "description": "associed game",
                        "type": "integer",
                        "example": "2"
                    }
                },
                "type": "object"
            },
            "Score": {
                "properties": {
                    "player_id": {
                        "description": "associed player",
                        "type": "integer",
                        "example": "3"
                    },
                    "hole_id": {
                        "description": "associed hole",
                        "type": "integer",
                        "example": "2"
                    }
                },
                "type": "object"
            },
            "User": {
                "properties": {
                    "name": {
                        "description": "user name",
                        "type": "string",
                        "example": "Eric Zemmour"
                    },
                    "email": {
                        "description": "minigolf email",
                        "type": "string",
                        "example": "eric.zemour@gmail.com"
                    },
                    "role": {
                        "description": "user role",
                        "type": "string",
                        "example": "user"
                    },
                    "city": {
                        "description": "minigolf city",
                        "type": "string",
                        "example": "Neuchâtel"
                    },
                    "password": {
                        "description": "user password",
                        "type": "string",
                        "example": "test1234"
                    }
                },
                "type": "object"
            }
        }
    }
}